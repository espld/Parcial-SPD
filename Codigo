//Defino pines
#define A 12
#define B 13
#define C 7
#define D 8
#define E 9
#define F 11
#define G 10

#define ENTRADA_SUBE 4
#define ENTRADA_BAJA 3
#define ENTRADA_RESET 5

#define UNIDAD A4 
#define DECENA A5 

#define APAGADOS 0
#define TIMEDISPLAYON 10

//Inicializo variables
//Inicio el contador en 0
int contadorDigito = 0;
/*Inicio de lo botones y los estados previos que luego usaré en una función.
en 1 es no presionado.
*/
int sube = 1;
int subePrevia = 1;
int baja = 1;
int bajaPrevia = 1;
int reset = 1;
int resetPrevia = 1;

//Configuro pines de entrada y de salida.
void setup()
  
{
  pinMode(A, OUTPUT);
  pinMode(B, OUTPUT);
  pinMode(C, OUTPUT);
  pinMode(D, OUTPUT);
  pinMode(E, OUTPUT);
  pinMode(F, OUTPUT);
  pinMode(G, OUTPUT);
  
  pinMode(ENTRADA_SUBE, INPUT_PULLUP);
  pinMode(ENTRADA_BAJA, INPUT_PULLUP);
  pinMode(ENTRADA_RESET, INPUT_PULLUP);
  
  pinMode(UNIDAD, OUTPUT);
  pinMode(DECENA, OUTPUT);
  
  digitalWrite(UNIDAD, 0);
  digitalWrite(DECENA, 0);    
}

//Configura los pines para mostrar un digito según los segmentos del display.
void impresionDigitos(int digito)
{
  digitalWrite(A,LOW);
  digitalWrite(B,LOW);
  digitalWrite(C,LOW);
  digitalWrite(D,LOW);
  digitalWrite(E,LOW);
  digitalWrite(F,LOW);
  digitalWrite(G,LOW);

	//En el switch se muestra el digito segun al case que entra.
  	switch(digito)
    {                 
      	case 0:   //digito 0   
          digitalWrite(A,HIGH);
          digitalWrite(B,HIGH);
          digitalWrite(C,HIGH);
          digitalWrite(D,HIGH);
          digitalWrite(E,HIGH);
          digitalWrite(F,HIGH);      	
          break;
      
    	case 1:  //digito 1    
          digitalWrite(B,HIGH);
          digitalWrite(C,HIGH);    
          break;
      
      	case 2:  //digito2      
          digitalWrite(A,HIGH);
          digitalWrite(B,HIGH);
          digitalWrite(D,HIGH);      	
          digitalWrite(E,HIGH);
          digitalWrite(G,HIGH);      	      
      	  break;      
      
      	case 3:   //digito 3   
          digitalWrite(A,HIGH);
          digitalWrite(B,HIGH);
          digitalWrite(C,HIGH);
          digitalWrite(D,HIGH);
          digitalWrite(G,HIGH);            	
          break;     
      
      	case 4:   //digito 4   
          digitalWrite(B,HIGH);
          digitalWrite(C,HIGH);
          digitalWrite(F,HIGH);
          digitalWrite(G,HIGH);      	     	
          break;
            
      	case 5:    //digito 5  
          digitalWrite(A,HIGH);
          digitalWrite(F,HIGH);
          digitalWrite(G,HIGH);
          digitalWrite(C,HIGH);
          digitalWrite(D,HIGH);   
          break;      
      
      	case 6:   //digito 6   
          digitalWrite(A,HIGH);
          digitalWrite(C,HIGH);
          digitalWrite(D,HIGH);
          digitalWrite(E,HIGH);
          digitalWrite(F,HIGH);      
          digitalWrite(G,HIGH);
          break;
            
      	case 7:    //digito 7  
          digitalWrite(A,HIGH);
          digitalWrite(B,HIGH);
          digitalWrite(C,HIGH);     
          break;
            
      	case 8:    //digito 8
          digitalWrite(A,HIGH);
          digitalWrite(B,HIGH);
          digitalWrite(C,HIGH);
          digitalWrite(D,HIGH);
          digitalWrite(E,HIGH);
          digitalWrite(F,HIGH);
          digitalWrite(G,HIGH);
          break;
            
      	case 9: 	//digito 9      
          digitalWrite(A,HIGH);
          digitalWrite(B,HIGH);
          digitalWrite(C,HIGH);
          digitalWrite(F,HIGH);
          digitalWrite(G,HIGH);      	
          break;            
    }
}

//Funcion para detectar si se presionó un boton y actuar en consecuencia.
int keypressed(void)
{
  sube = digitalRead(ENTRADA_SUBE);
  baja = digitalRead(ENTRADA_BAJA);
  reset = digitalRead(ENTRADA_RESET);
  
  if(sube) //El boton no se presionó.
  {
    subePrevia = 1;
  }
  if(baja)
  {
    bajaPrevia = 1;
  }
  if(reset)
  {
    resetPrevia = 1;
  }
  //Pregunto si el botón se presionó y si es distinta al estado anterior.
  //Devuelvo el valor del boton	
  if(sube == 0 && sube != subePrevia)
  {
    subePrevia = sube;
    return ENTRADA_SUBE;
  }
  if(baja == 0 && baja != bajaPrevia)
  {
    bajaPrevia = baja;
    return ENTRADA_BAJA;
  }
  if(reset == 0 && reset != resetPrevia)
  {
    resetPrevia = reset;
    return ENTRADA_RESET;
  }
  return 0; 
} 

//Realizo multiplexacion
//Enciendo un display y desactivo el otro.
void prendeDigito(int digito)
{ 
    if(digito == UNIDAD)
  {
    digitalWrite(UNIDAD, LOW);
    digitalWrite(DECENA, HIGH);
    delay(TIMEDISPLAYON);
  }
   else if(digito == DECENA)
    {
      digitalWrite(UNIDAD, HIGH);
       digitalWrite(DECENA, LOW);
      delay(TIMEDISPLAYON);
    }
      else
      {
        digitalWrite(UNIDAD,HIGH);
        digitalWrite(DECENA,HIGH);
      }
}

//Muestro el numero del contador en el display.
void impresionContador(int contador)
{

	prendeDigito(APAGADOS);
    impresionDigitos(contador / 10);
  	prendeDigito(DECENA);
  
  	prendeDigito(APAGADOS);
    impresionDigitos(contador - 10 *((int)contador / 10));
    prendeDigito(UNIDAD);


}

//Controlo el contador.
//Según el boton presionado: sube, baja o reseetea la cuenta.
//Si se llega a 99 vuelve a 0.
//Si bajamos uno desde el 0 vuelve a 99.
//Si se resetea vuelve a 0.
void loop()
{
  
	int pressed = keypressed();
  
  	if(pressed == ENTRADA_SUBE)
    {
		contadorDigito++;
      	if(contadorDigito > 99)      
           contadorDigito = 0;
    }
    else if(pressed == ENTRADA_BAJA)
    {
      	contadorDigito--;
      	if(contadorDigito <0)      
           contadorDigito = 99;
      
    }
    else if(pressed == ENTRADA_RESET)
    {
      contadorDigito = 0;
    }
  

  
  impresionContador(contadorDigito);             
}
